<?xml version="1.0" encoding="utf-8"?>
<modification>
  <name>  OptimBlog - category</name>
  <code>optimblog-category</code>
  <version>3.0.0.9</version>
  <author>Dmitriy Khokhlov | optimlab.com</author>
  <link>http://optimlab.com</link>
  
  <!-- Category -->
  <file path="catalog/controller/product/category.php">
      <operation error="skip">
        <search><![CDATA[
		$this->load->model('catalog/product');
        ]]></search>
        <add position="after"><![CDATA[
		$this->load->model('catalog/information');
        ]]></add>
      </operation>
	  <operation error="skip">
        <search><![CDATA[
		foreach ($parts as $path_id) {
        ]]></search>
        <add position="before"><![CDATA[
            $category_path = $this->model_catalog_category->getCategoryPath($category_id);
            
            $parts = explode('_', (string)$category_path);
            (int)array_pop($parts);
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['description'] = html_entity_decode($category_info['description'], ENT_QUOTES, 'UTF-8');
        ]]></search>
        <add position="before"><![CDATA[
			$data['images'] = array();

			$results = $this->model_catalog_category->getCategoryImages($category_id);

			foreach ($results as $result) {
				$data['images'][] = array(
					'popup' => $this->model_tool_image->resize($result['image'], $this->config->get('information_image_category_popup_width'), $this->config->get('information_image_category_popup_height')),
					'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get('information_image_category_additional_width'), $this->config->get('information_image_category_additional_height'))
				);
			}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['heading_title'] = $category_info['name'];
        ]]></search>
        <add position="replace"><![CDATA[
			$data['heading_title'] = $category_info['header'] ? $category_info['header'] : $category_info['name'];
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[utf8_substr(trim(strip_tags(html_entity_decode($result['description']]]></search>
        <add position="replace"><![CDATA[!empty($result['short_description']) ? trim(html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8')) : utf8_substr(trim(strip_tags(html_entity_decode($result['description']]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
					'name' => $result['name'] . ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''),
        ]]></search>
        <add position="replace"><![CDATA[
					'name' => $result['name'] . ($this->config->get('config_product_count') ? ' (' . (empty($category_info['information']) ? $this->model_catalog_product->getTotalProducts($filter_data) : $this->model_catalog_information->getTotalInformations($filter_data)) . ')' : ''),
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['products'] = array();
        ]]></search>
        <add position="before"><![CDATA[
            $data['category_information'] = $category_info['information'];

            if (empty($category_info['information'])) {
			// Product
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['limit'] = $limit;
        ]]></search>
        <add position="after"><![CDATA[
            } elseif ($this->config->get('information_category_show') && !empty($category_info['information'])) {
                // Information
				$this->document->addScript('catalog/view/javascript/information.js');

				if ($this->config->get('information_category_sort')) {
					$category_sort = explode('-', (string)$this->config->get('information_category_sort'));
                    $sort = $category_sort[0];
                    $order = $category_sort[1];
				} else {
                    $sort = 'i.sort_order';
                    $order = 'ASC';
				}

				if (isset($this->request->get['sort'])) {
					$sort = $this->request->get['sort'];
				}

				if (isset($this->request->get['order'])) {
					$order = $this->request->get['order'];
				}

				if (isset($this->request->get['limit'])) {
					$limit = (int)$this->request->get['limit'];
				} else {
					$limit = $this->config->get('information_limit');
				}

				$data['informations'] = array();

				$filter_data = array(
					'filter_category_id' => $category_id,
					'filter_filter'      => $filter,
					'sort'               => $sort,
					'order'              => $order,
					'start'              => ($page - 1) * $limit,
					'limit'              => $limit
				);

				$information_total = $this->model_catalog_information->getTotalInformations($filter_data);

				$results = $this->model_catalog_information->getInformations($filter_data);

				foreach ($results as $result) {
					if ($result['image']) {
						$image = $this->model_tool_image->resize($result['image'], $this->config->get('information_image_information_width'), $this->config->get('information_image_information_height'));
					} else {
						$image = false;
					}

					if ($this->config->get('information_review_status')) {
						$rating = (int)$result['rating'];
					} else {
						$rating = false;
					}

					$data['informations'][] = array(
						'information_id' => $result['information_id'],
						'thumb'          => $image,
						'title'          => $result['title'],
						'description'    => !empty($result['short_description']) ? trim(html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8')) : utf8_substr(trim(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8'))), 0, $this->config->get('information_description_length')) . '..',
						'user_id'        => $result['user_id'],
						'author'         => $result['author'],
						'date_added'     => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
						'reviews'        => sprintf($this->language->get('text_review'), $result['reviews']),
						'rating'         => $result['rating'],
						'href'           => $this->url->link('information/information', 'path=' . $this->request->get['path'] . '&information_id=' . $result['information_id'] . $url)
					);
				}

				$url = '';

				if (isset($this->request->get['filter'])) {
					$url .= '&filter=' . $this->request->get['filter'];
				}

				if (isset($this->request->get['limit'])) {
					$url .= '&limit=' . $this->request->get['limit'];
				}

				$data['sorts'] = array();

				$data['sorts'][] = array(
					'text'  => $this->language->get('text_default'),
					'value' => 'i.sort_order-ASC',
					'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=i.sort_order&order=ASC' . $url)
				);

				$data['sorts'][] = array(
					'text'  => $this->language->get('text_name_asc'),
					'value' => 'id.title-ASC',
					'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=id.title&order=ASC' . $url)
				);

				$data['sorts'][] = array(
					'text'  => $this->language->get('text_name_desc'),
					'value' => 'id.title-DESC',
					'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=id.title&order=DESC' . $url)
				);

				$data['sorts'][] = array(
					'text'  => $this->language->get('text_date_asc'),
					'value' => 'i.date_added-ASC',
					'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=i.date_added&order=ASC' . $url)
				);

				$data['sorts'][] = array(
					'text'  => $this->language->get('text_date_desc'),
					'value' => 'i.date_added-DESC',
					'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=i.date_added&order=DESC' . $url)
				);

				if ($this->config->get('information_review_status')) {
					$data['sorts'][] = array(
						'text'  => $this->language->get('text_rating_desc'),
						'value' => 'rating-DESC',
						'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=DESC' . $url)
					);

					$data['sorts'][] = array(
						'text'  => $this->language->get('text_rating_asc'),
						'value' => 'rating-ASC',
						'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . '&sort=rating&order=ASC' . $url)
					);
				}

				$url = '';

				if (isset($this->request->get['filter'])) {
					$url .= '&filter=' . $this->request->get['filter'];
				}

				if (isset($this->request->get['sort'])) {
					$url .= '&sort=' . $this->request->get['sort'];
				}

				if (isset($this->request->get['order'])) {
					$url .= '&order=' . $this->request->get['order'];
				}

				$data['limits'] = array();

				$limits = array_unique(array($this->config->get('information_limit'), 25, 50, 75, 100));

				sort($limits);

				foreach($limits as $value) {
					$data['limits'][] = array(
						'text'  => $value,
						'value' => $value,
						'href'  => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&limit=' . $value)
					);
				}

				$url = '';

				if (isset($this->request->get['filter'])) {
					$url .= '&filter=' . $this->request->get['filter'];
				}

				if (isset($this->request->get['sort'])) {
					$url .= '&sort=' . $this->request->get['sort'];
				}

				if (isset($this->request->get['order'])) {
					$url .= '&order=' . $this->request->get['order'];
				}

				if (isset($this->request->get['limit'])) {
					$url .= '&limit=' . $this->request->get['limit'];
				}

				$pagination = new Pagination();
				$pagination->total = $information_total;
				$pagination->page = $page;
				$pagination->limit = $limit;
				$pagination->url = $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url . '&page={page}');

				$data['pagination'] = $pagination->render();

				$data['results'] = sprintf($this->language->get('text_pagination'), ($information_total) ? (($page - 1) * $limit) + 1 : 0, ((($page - 1) * $limit) > ($information_total - $limit)) ? $information_total : ((($page - 1) * $limit) + $limit), $information_total, ceil($information_total / $limit));

				// http://googlewebmastercentral.blogspot.com/2011/09/pagination-with-relnext-and-relprev.html
				if ($page == 1) {
			    	$this->document->addLink($this->url->link('product/category', 'path=' . $this->request->get['path']), 'canonical');
				} else {
					$this->document->addLink($this->url->link('product/category', 'path=' . $this->request->get['path'] . '&page='. $page), 'canonical');
				}
			
				if ($page > 1) {
			    	$this->document->addLink($this->url->link('product/category', 'path=' . $this->request->get['path'] . (($page - 2) ? '&page='. ($page - 1) : '')), 'prev');
				}

				if ($limit && ceil($information_total / $limit) > $page) {
			    	$this->document->addLink($this->url->link('product/category', 'path=' . $this->request->get['path'] . '&page='. ($page + 1)), 'next');
				}

				$data['sort'] = $sort;
				$data['order'] = $order;
				$data['limit'] = $limit;

				$data['sort_show'] = $this->config->get('information_category_sort_show');
				$data['limit_show'] = $this->config->get('information_category_limit_show');
				$data['view_show'] = $this->config->get('information_category_view_show');
				$data['view'] = $this->config->get('information_category_view');

				if ($this->config->get('information_category_author') && !empty($this->config->get('information_exclusion_category_author')) && in_array($category_id, $this->config->get('information_exclusion_category_author'))) {
					$data['show_author'] = false;
				} elseif (!$this->config->get('information_category_author') && !empty($this->config->get('information_exclusion_category_author')) && in_array($category_id, $this->config->get('information_exclusion_category_author'))){
					$data['show_author'] = true;
				} else {
					$data['show_author'] = $this->config->get('information_category_author');
				}

				if ($this->config->get('information_category_date') && !empty($this->config->get('information_exclusion_category_date')) && in_array($category_id, $this->config->get('information_exclusion_category_date'))) {
					$data['show_date'] = false;
				} elseif (!$this->config->get('information_category_date') && !empty($this->config->get('information_exclusion_category_date')) && in_array($category_id, $this->config->get('information_exclusion_category_date'))){
					$data['show_date'] = true;
				} else {
					$data['show_date'] = $this->config->get('information_category_date');
				}

				if ($this->config->get('information_category_review') && !empty($this->config->get('information_exclusion_category_review')) && in_array($category_id, $this->config->get('information_exclusion_category_review'))) {
					$data['show_review'] = false;
				} elseif (!$this->config->get('information_category_review') && !empty($this->config->get('information_exclusion_category_review')) && in_array($category_id, $this->config->get('information_exclusion_category_review'))){
					$data['show_review'] = true;
				} else {
					$data['show_review'] = $this->config->get('information_category_review');
				}
            }
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[

        ]]></search>
        <add position="after"><![CDATA[

        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[

        ]]></search>
        <add position="replace"><![CDATA[

        ]]></add>
      </operation>
  </file>

  <file path="catalog/language/en-gb/product/category.php">
      <operation error="skip">
        <search><![CDATA[
// Text
        ]]></search>
        <add position="after"><![CDATA[
$_['text_read']         = 'Read..';
$_['text_date_asc']     = 'Date (Old)';
$_['text_date_desc']    = 'Date (Last)';
$_['text_review']       = 'Reviews (%s)';
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
$_['text_limit']
        ]]></search>
        <add position="after"><![CDATA[
// Buttons
$_['button_block']      = 'Block';
        ]]></add>
      </operation>
  </file>

  <file path="catalog/language/ru-ru/product/category.php">
      <operation error="skip">
        <search><![CDATA[
// Text
        ]]></search>
        <add position="after"><![CDATA[
$_['text_read']         = 'Подробнее..';
$_['text_date_asc']     = 'Дате (начиная с давней)';
$_['text_date_desc']    = 'Дате (начиная с последней)';
$_['text_review']       = 'Отзывов (%s)';
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
$_['text_limit']
        ]]></search>
        <add position="after"><![CDATA[
// Buttons
$_['button_block']      = 'На всю ширину';
        ]]></add>
      </operation>
  </file>

  <file path="catalog/model/catalog/category.php">
      <operation error="skip">
        <search><![CDATA[
		public function getCategories($parent_id = 0) {
        ]]></search>
        <add position="before"><![CDATA[
	public function getCategoryImages($category_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "category_image WHERE category_id = '" . (int)$category_id . "' ORDER BY sort_order ASC");

		return $query->rows;
	}

	public function getCategoryPath($category_id) {
		$query = $this->db->query("SELECT GROUP_CONCAT( path_id ORDER BY level SEPARATOR '_' ) AS path FROM " . DB_PREFIX . "category_path WHERE category_id = '" . (int)$category_id . "'");

		return $query->row['path'];
	}
        ]]></add>
      </operation>
  </file>

  <!-- Information -->
  <file path="catalog/controller/information/information.php">
      <operation error="skip">
        <search><![CDATA[
		if (isset($this->request->get['information_id'])) {
        ]]></search>
        <add position="before"><![CDATA[
		$this->load->model('catalog/category');

		if (isset($this->request->get['path'])) {
			$path = '';

			$parts = explode('_', (string)$this->request->get['path']);

			$category_id = (int)array_pop($parts);

			foreach ($parts as $path_id) {
				if (!$path) {
					$path = $path_id;
				} else {
					$path .= '_' . $path_id;
				}

				$category_info = $this->model_catalog_category->getCategory($path_id);

				if ($category_info) {
					$data['breadcrumbs'][] = array(
						'text' => $category_info['name'],
						'href' => $this->url->link('product/category', 'path=' . $path)
					);
				}
			}

			// Set the last category breadcrumb
			$category_info = $this->model_catalog_category->getCategory($category_id);

			if ($category_info) {
				$url = '';

				if (isset($this->request->get['sort'])) {
					$url .= '&sort=' . $this->request->get['sort'];
				}

				if (isset($this->request->get['order'])) {
					$url .= '&order=' . $this->request->get['order'];
				}

				if (isset($this->request->get['page'])) {
					$url .= '&page=' . $this->request->get['page'];
				}

				if (isset($this->request->get['limit'])) {
					$url .= '&limit=' . $this->request->get['limit'];
				}

				$data['breadcrumbs'][] = array(
					'text' => $category_info['name'],
					'href' => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url)
				);
			}
		}

		$this->load->model('catalog/manufacturer');

		if (isset($this->request->get['manufacturer_id'])) {
			$data['breadcrumbs'][] = array(
				'text' => $this->language->get('text_brand'),
				'href' => $this->url->link('product/manufacturer')
			);

			$url = '';

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			$manufacturer_info = $this->model_catalog_manufacturer->getManufacturer($this->request->get['manufacturer_id']);

			if ($manufacturer_info) {
				$data['breadcrumbs'][] = array(
					'text' => $manufacturer_info['name'],
					'href' => $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $this->request->get['manufacturer_id'] . $url)
				);
			}
		}

		if (isset($this->request->get['search']) || isset($this->request->get['tag'])) {
			$url = '';

			if (isset($this->request->get['search'])) {
				$url .= '&search=' . $this->request->get['search'];
			}

			if (isset($this->request->get['tag'])) {
				$url .= '&tag=' . $this->request->get['tag'];
			}

			if (isset($this->request->get['description'])) {
				$url .= '&description=' . $this->request->get['description'];
			}

			if (isset($this->request->get['category_id'])) {
				$url .= '&category_id=' . $this->request->get['category_id'];
			}

			if (isset($this->request->get['sub_category'])) {
				$url .= '&sub_category=' . $this->request->get['sub_category'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			$data['breadcrumbs'][] = array(
				'text' => $this->language->get('text_search'),
				'href' => $this->url->link('information/search', $url)
			);
		}
        ]]></add>
      </operation>
      <operation error="skip">
        <search index="0"><![CDATA[
		if ($information_info) {
        ]]></search>
        <add position="after"><![CDATA[
			$main_category = $this->model_catalog_information->getMainCategory($information_id);

			if ($main_category) {
				$category_path = $this->model_catalog_category->getCategoryPath($main_category);
			} else {
				$category_path = '';
			}

			if (!isset($this->request->get['path']) && !isset($this->request->get['manufacturer_id']) && !isset($this->request->get['search']) && !isset($this->request->get['tag']) && $main_category) {
				$this->request->get['path'] = $category_path;

				$path = '';

				$parts = explode('_', (string)$this->request->get['path']);
				(int)array_pop($parts);
      
				foreach ($parts as $path_id) {
					if (!$path) {
						$path = (int)$path_id;
					} else {
						$path .= '_' . (int)$path_id;
					}

					$category_info = $this->model_catalog_category->getCategory($path_id);

					if ($category_info) {
						$data['breadcrumbs'][] = array(
							'text' => $category_info['name'],
							'href' => $this->url->link('product/category', 'path=' . $path)
						);
					}
				}

				// Set the last category breadcrumb
				$category_info = $this->model_catalog_category->getCategory($main_category);

				if ($category_info) {
					$url = '';

					if (isset($this->request->get['sort'])) {
						$url .= '&sort=' . $this->request->get['sort'];
					}

					if (isset($this->request->get['order'])) {
						$url .= '&order=' . $this->request->get['order'];
					}

					if (isset($this->request->get['page'])) {
						$url .= '&page=' . $this->request->get['page'];
					}

					if (isset($this->request->get['limit'])) {
						$url .= '&limit=' . $this->request->get['limit'];
					}

					$data['breadcrumbs'][] = array(
						'text' => $category_info['name'],
						'href' => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url)
					);
				}
			}

			$url = '';

			if (isset($this->request->get['path'])) {
				$url .= '&path=' . $this->request->get['path'];
			}

			if (isset($this->request->get['filter'])) {
				$url .= '&filter=' . $this->request->get['filter'];
			}

			if (isset($this->request->get['manufacturer_id'])) {
				$url .= '&manufacturer_id=' . $this->request->get['manufacturer_id'];
			}

			if (isset($this->request->get['search'])) {
				$url .= '&search=' . $this->request->get['search'];
			}

			if (isset($this->request->get['tag'])) {
				$url .= '&tag=' . $this->request->get['tag'];
			}

			if (isset($this->request->get['description'])) {
				$url .= '&description=' . $this->request->get['description'];
			}

			if (isset($this->request->get['category_id'])) {
				$url .= '&category_id=' . $this->request->get['category_id'];
			}

			if (isset($this->request->get['sub_category'])) {
				$url .= '&sub_category=' . $this->request->get['sub_category'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}

			$this->document->addLink($this->url->link('information/information', 'information_id=' . $information_id), 'canonical');
			$this->document->addScript('catalog/view/javascript/jquery/magnific/jquery.magnific-popup.min.js');
			$this->document->addStyle('catalog/view/javascript/jquery/magnific/magnific-popup.css');
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA['href' => $this->url->link('information/information', 'information_id=' .  $information_id)]]></search>
        <add position="replace"><![CDATA['href' => $this->url->link('information/information', $url . '&information_id=' .  $information_id)]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['heading_title'] = $information_info['title'];
        ]]></search>
        <add position="replace"><![CDATA[
			$data['heading_title'] = $information_info['header'] ? $information_info['header'] : $information_info['title'];
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['description'] = html_entity_decode($information_info['description'], ENT_QUOTES, 'UTF-8');
        ]]></search>
        <add position="replace"><![CDATA[
			$data['text_login'] = sprintf($this->language->get('text_login'), $this->url->link('account/login', '', true), $this->url->link('account/register', '', true));

			$this->load->model('catalog/review');

			$data['text_review'] = sprintf($this->language->get('text_review'), $information_info['reviews']);

			$data['information_id'] = $information_id;
			$data['author'] = $information_info['author'];
			$data['date_added'] = date($this->language->get('date_format_information'), strtotime($information_info['date_added']));
			$data['manufacturer'] = $information_info['manufacturer'];
			$data['manufacturers'] = $this->url->link('product/manufacturer/info', 'manufacturer_id=' . $information_info['manufacturer_id']);
			$data['short_description'] = html_entity_decode($information_info['short_description'], ENT_QUOTES, 'UTF-8');
			$data['description'] = html_entity_decode($information_info['description'], ENT_QUOTES, 'UTF-8');

			$this->load->model('tool/image');

			if ($information_info['image']) {
				$data['popup'] = $this->model_tool_image->resize($information_info['image'], $this->config->get('information_image_popup_width'), $this->config->get('information_image_popup_height'));
			} else {
				$data['popup'] = '';
			}

			if ($information_info['image']) {
				$data['thumb'] = $this->model_tool_image->resize($information_info['image'], $this->config->get('information_image_thumb_width'), $this->config->get('information_image_thumb_height'));
			} else {
				$data['thumb'] = '';
			}

			$data['images'] = array();

			$results = $this->model_catalog_information->getInformationImages($information_id);

			foreach ($results as $result) {
				$data['images'][] = array(
					'popup' => $this->model_tool_image->resize($result['image'], $this->config->get('information_image_popup_width'), $this->config->get('information_image_popup_height')),
					'thumb' => $this->model_tool_image->resize($result['image'], $this->config->get('information_image_additional_width'), $this->config->get('information_image_additional_height'))
				);
			}

			$data['review_status'] = $this->config->get('information_review_status');

			if ($this->config->get('information_review_guest') || $this->customer->isLogged()) {
				$data['review_guest'] = true;
			} else {
				$data['review_guest'] = false;
			}

			if ($this->customer->isLogged()) {
				$data['customer_name'] = $this->customer->getFirstName() . '&nbsp;' . $this->customer->getLastName();
			} else {
				$data['customer_name'] = '';
			}

			$data['reviews'] = sprintf($this->language->get('text_reviews'), (int)$information_info['reviews']);
			$data['rating'] = (int)$information_info['rating'];

			// Captcha
			if ($this->config->get('captcha_' . $this->config->get('information_captcha') . '_status') && $this->config->get('information_captcha')) {
				$data['captcha'] = $this->load->controller('extension/captcha/' . $this->config->get('information_captcha'));
			} else {
				$data['captcha'] = '';
			}

			$data['share'] = $this->url->link('information/information', 'information_id=' . $information_id);

			$data['attribute_groups'] = $this->model_catalog_information->getInformationAttributes($information_id);

			$data['informations'] = array();

			$results = $this->model_catalog_information->getInformationRelated($information_id);

			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('information_image_related_width'), $this->config->get('information_image_related_height'));
				} else {
					$image = false;
				}

				if ($this->config->get('information_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$data['informations'][] = array(
					'information_id' => $result['information_id'],
					'thumb'          => $image,
					'title'          => $result['title'],
					'description'    => !empty($result['short_description']) ? trim(html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8')) : utf8_substr(trim(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8'))), 0, $this->config->get('information_description_length')) . '..',
					'user_id'        => $result['user_id'],
					'author'         => $result['author'],
					'date_added'     => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
					'reviews'        => sprintf($this->language->get('text_related_reviews'), $result['reviews']),
					'rating'         => $result['rating'],
					'href'           => $this->url->link('information/information', 'information_id=' . $result['information_id'])
				);
			}

			$data['products'] = array();

			$results = $this->model_catalog_information->getProductRelated($information_id);

			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
				} else {
					$image = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_related_height'));
				}

				if ($this->customer->isLogged() || !$this->config->get('config_customer_price')) {
					$price = $this->currency->format($this->tax->calculate($result['price'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$price = false;
				}

				if ((float)$result['special']) {
					$special = $this->currency->format($this->tax->calculate($result['special'], $result['tax_class_id'], $this->config->get('config_tax')), $this->session->data['currency']);
				} else {
					$special = false;
				}

				if ($this->config->get('config_tax')) {
					$tax = $this->currency->format((float)$result['special'] ? $result['special'] : $result['price'], $this->session->data['currency']);
				} else {
					$tax = false;
				}

				if ($this->config->get('config_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$data['products'][] = array(
					'product_id'  => $result['product_id'],
					'thumb'       => $image,
					'name'        => $result['name'],
					'description' =>  !empty($result['short_description']) ? trim(html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8')) : utf8_substr(trim(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8'))), 0, $this->config->get('theme_' . $this->config->get('config_theme') . '_product_description_length')) . '..',
					'price'       => $price,
					'special'     => $special,
					'tax'         => $tax,
					'minimum'     => $result['minimum'] > 0 ? $result['minimum'] : 1,
					'rating'      => $rating,
					'href'        => $this->url->link('product/product', 'product_id=' . $result['product_id'])
				);
			}

			$data['tags'] = array();

			if ($information_info['tag']) {
				$tags = explode(',', $information_info['tag']);

				foreach ($tags as $tag) {
					$data['tags'][] = array(
						'tag'  => trim($tag),
						'href' => $this->url->link('information/search', 'tag=' . trim($tag))
					);
				}
			}

			$this->model_catalog_information->updateViewed($information_id);

			if (!empty($this->config->get('information_exclusion')) && in_array($information_id, $this->config->get('information_exclusion'))) {
				$data['information_exclusion'] = true;
			} else {
				$data['information_exclusion'] = false;
			}

			if ($this->config->get('information_information_author') && !empty($this->config->get('information_exclusion_information_author')) && in_array($information_id, $this->config->get('information_exclusion_information_author'))) {
				$data['show_author'] = false;
			} elseif (!$this->config->get('information_information_author') && !empty($this->config->get('information_exclusion_information_author')) && in_array($information_id, $this->config->get('information_exclusion_information_author'))){
				$data['show_author'] = true;
			} else {
				$data['show_author'] = $this->config->get('information_information_author');
			}

			if ($this->config->get('information_information_date') && !empty($this->config->get('information_exclusion_information_date')) && in_array($information_id, $this->config->get('information_exclusion_information_date'))) {
				$data['show_date'] = false;
			} elseif (!$this->config->get('information_information_date') && !empty($this->config->get('information_exclusion_information_date')) && in_array($information_id, $this->config->get('information_exclusion_information_date'))){
				$data['show_date'] = true;
			} else {
				$data['show_date'] = $this->config->get('information_information_date');
			}

			if ($this->config->get('information_information_review') && !empty($this->config->get('information_exclusion_information_review')) && in_array($information_id, $this->config->get('information_exclusion_information_review'))) {
				$data['show_review'] = false;
			} elseif (!$this->config->get('information_information_review') && !empty($this->config->get('information_exclusion_information_review')) && in_array($information_id, $this->config->get('information_exclusion_information_review'))){
				$data['show_review'] = true;
			} else {
				$data['show_review'] = $this->config->get('information_information_review');
			}

			if ($this->config->get('information_information_manufacturer') && !empty($this->config->get('information_exclusion_information_manufacturer')) && in_array($information_id, $this->config->get('information_exclusion_information_manufacturer'))) {
				$data['show_manufacturer'] = false;
			} elseif (!$this->config->get('information_information_manufacturer') && !empty($this->config->get('information_exclusion_information_manufacturer')) && in_array($information_id, $this->config->get('information_exclusion_information_manufacturer'))){
				$data['show_manufacturer'] = true;
			} else {
				$data['show_manufacturer'] = $this->config->get('information_information_manufacturer');
			}

			$data['show_related_author'] = $this->config->get('information_category_author');
			$data['show_related_date'] = $this->config->get('information_category_date');
			$data['show_related_review'] = $this->config->get('information_category_review');
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
				'href' => $this->url->link('information/information', 'information_id=' . $information_id)
        ]]></search>
        <add offset="2" position="before"><![CDATA[
			$url = '';

			if (isset($this->request->get['path'])) {
				$url .= '&path=' . $this->request->get['path'];
			}

			if (isset($this->request->get['filter'])) {
				$url .= '&filter=' . $this->request->get['filter'];
			}

			if (isset($this->request->get['manufacturer_id'])) {
				$url .= '&manufacturer_id=' . $this->request->get['manufacturer_id'];
			}

			if (isset($this->request->get['search'])) {
				$url .= '&search=' . $this->request->get['search'];
			}

			if (isset($this->request->get['tag'])) {
				$url .= '&tag=' . $this->request->get['tag'];
			}

			if (isset($this->request->get['description'])) {
				$url .= '&description=' . $this->request->get['description'];
			}

			if (isset($this->request->get['category_id'])) {
				$url .= '&category_id=' . $this->request->get['category_id'];
			}

			if (isset($this->request->get['sub_category'])) {
				$url .= '&sub_category=' . $this->request->get['sub_category'];
			}

			if (isset($this->request->get['sort'])) {
				$url .= '&sort=' . $this->request->get['sort'];
			}

			if (isset($this->request->get['order'])) {
				$url .= '&order=' . $this->request->get['order'];
			}

			if (isset($this->request->get['page'])) {
				$url .= '&page=' . $this->request->get['page'];
			}

			if (isset($this->request->get['limit'])) {
				$url .= '&limit=' . $this->request->get['limit'];
			}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA['href' => $this->url->link('information/information', 'information_id=' . $information_id)]]></search>
        <add position="replace"><![CDATA['href' => $this->url->link('information/information', $url . '&information_id=' . $information_id)]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
	public function agree() {
        ]]></search>
        <add position="before"><![CDATA[
	public function review() {
		$this->load->language('information/information');

		$this->load->model('catalog/review');

		if (isset($this->request->get['page'])) {
			$page = $this->request->get['page'];
		} else {
			$page = 1;
		}

		$data['reviews'] = array();

		$review_total = $this->model_catalog_review->getTotalReviewsByInformationId($this->request->get['information_id']);

		$results = $this->model_catalog_review->getReviewsByInformationId($this->request->get['information_id'], ($page - 1) * 5, 5);

		foreach ($results as $result) {
			$data['reviews'][] = array(
				'author'     => $result['author'],
				'text'       => nl2br($result['text']),
				'reply'      => html_entity_decode($result['reply'], ENT_QUOTES, 'UTF-8'),
				'rating'     => (int)$result['rating'],
				'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added']))
			);
		}

		$pagination = new Pagination();
		$pagination->total = $review_total;
		$pagination->page = $page;
		$pagination->limit = 5;
		$pagination->url = $this->url->link('information/information/review', 'information_id=' . $this->request->get['information_id'] . '&page={page}');

		$data['pagination'] = $pagination->render();

		$data['results'] = sprintf($this->language->get('text_pagination'), ($review_total) ? (($page - 1) * 5) + 1 : 0, ((($page - 1) * 5) > ($review_total - 5)) ? $review_total : ((($page - 1) * 5) + 5), $review_total, ceil($review_total / 5));

		$this->response->setOutput($this->load->view('product/review', $data));
	}

	public function write() {
		$this->load->language('information/information');

		$json = array();

		if ($this->request->server['REQUEST_METHOD'] == 'POST') {
			if ((utf8_strlen($this->request->post['name']) < 3) || (utf8_strlen($this->request->post['name']) > 25)) {
				$json['error'] = $this->language->get('error_name');
			}

			if ((utf8_strlen($this->request->post['text']) < 25) || (utf8_strlen($this->request->post['text']) > 1000)) {
				$json['error'] = $this->language->get('error_text');
			}

			if (empty($this->request->post['rating']) || $this->request->post['rating'] < 0 || $this->request->post['rating'] > 5) {
				$json['error'] = $this->language->get('error_rating');
			}

			// Captcha
			if ($this->config->get('captcha_' . $this->config->get('information_captcha') . '_status') && $this->config->get('information_captcha')) {
				$captcha = $this->load->controller('extension/captcha/' . $this->config->get('information_captcha') . '/validate');

				if ($captcha) {
					$json['error'] = $captcha;
				}
			}

			if (!isset($json['error'])) {
				$this->load->model('catalog/review');

				$this->model_catalog_review->addInformationReview($this->request->get['information_id'], $this->request->post);

				$json['success'] = $this->language->get('text_success');
			}
		}

		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
        ]]></add>
      </operation>
  </file>

  <file path="catalog/language/en-gb/information/information.php">
      <operation error="skip">
        <search><![CDATA[
$_['text_error']
        ]]></search>
        <add position="before"><![CDATA[
$_['text_search']             = 'Search';
$_['text_brand']              = 'Brand';
$_['text_manufacturer']       = 'Manufacturer:';
$_['text_attribute']          = 'Attribute';
$_['text_review']             = 'Reviews (%s)';
$_['text_reviews']            = '%s reviews';
$_['text_write']              = 'Write a review';
$_['text_login']              = 'Please <a href="%s">login</a> or <a href="%s">register</a> to review';
$_['text_no_reviews']         = 'There are no reviews for this article.';
$_['text_note']               = '<span class="text-danger">Note:</span> HTML is not translated!';
$_['text_success']            = 'Thank you for your review. It has been submitted to the webmaster for approval.';
$_['text_related']            = 'Related Articles';
$_['text_related_product']    = 'Related Products';
$_['text_related_reviews']    = '%s reviews';
$_['text_read']               = 'Read..';
$_['text_tags']               = 'Tags:';
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
$_['text_error']
        ]]></search>
        <add position="after"><![CDATA[
// Entry
$_['entry_name']              = 'Your Name';
$_['entry_review']            = 'Your Review';
$_['entry_rating']            = 'Rating';
$_['entry_good']              = 'Good';
$_['entry_bad']               = 'Bad';

// Error
$_['error_name']              = 'Warning: Review Name must be between 3 and 25 characters!';
$_['error_text']              = 'Warning: Review Text must be between 25 and 1000 characters!';
$_['error_rating']            = 'Warning: Please select a review rating!';

// Locale
$_['date_format_information'] = 'd.m.Y';
$_['date_format_short']       = 'd.m.Y';
$_['date_format_long']        = 'd.m.Y H:i:s';
        ]]></add>
      </operation>
  </file>

  <file path="catalog/language/ru-ru/information/information.php">
      <operation error="skip">
        <search><![CDATA[
$_['text_error']
        ]]></search>
        <add position="before"><![CDATA[
$_['text_search']             = 'Поиск';
$_['text_brand']              = 'Производитель';
$_['text_manufacturer']       = 'Производитель:';
$_['text_attribute']          = 'Характеристики';
$_['text_review']             = 'Отзывы (%s)';
$_['text_reviews']            = '%s отзывов';
$_['text_write']              = 'Написать отзыв';
$_['text_login']              = 'Пожалуйста <a href="%s">авторизируйтесь</a> или <a href="%s">создайте учетную запись</a> перед тем как написать отзыв';
$_['text_no_reviews']         = 'Нет отзывов о данной статье.';
$_['text_note']               = '<span style="color: #FF0000;">Примечание:</span> HTML разметка не поддерживается! Используйте обычный текст.';
$_['text_success']            = 'Спасибо за ваш отзыв. Он поступил администратору для проверки на спам и вскоре будет опубликован.';
$_['text_related']            = 'Рекомендуемые статьи';
$_['text_related_product']    = 'Рекомендуемые товары';
$_['text_related_reviews']    = '%s отзывов';
$_['text_read']               = 'Подробнее..';
$_['text_tags']               = 'Теги:';
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
$_['text_error']
        ]]></search>
        <add position="after"><![CDATA[
// Entry
$_['entry_name']              = 'Ваше имя:';
$_['entry_review']            = 'Ваш отзыв:';
$_['entry_rating']            = 'Оценка:';
$_['entry_good']              = 'Хорошо';
$_['entry_bad']               = 'Плохо';

// Error
$_['error_name']              = 'Имя должно быть от 3 до 25 символов!';
$_['error_text']              = 'Текст отзыва должен быть от 25 до 1000 символов!';
$_['error_rating']            = 'Пожалуйста, выберите оценку!';
        
// Locale
$_['date_format_information'] = 'd.m.Y';
$_['date_format_short']       = 'd.m.Y';
$_['date_format_long']        = 'd.m.Y H:i:s';
        ]]></add>
      </operation>
  </file>

  <file path="catalog/model/catalog/information.php">
      <operation error="skip">
        <search regex="true"><![CDATA[~(getInformation\(\$information_id\) \{).*(\})~isU]]></search>
        <add><![CDATA[$1
		$query = $this->db->query("SELECT DISTINCT *, id.title AS title, i.image, m.name AS manufacturer, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.information_id = i.information_id AND r1.status = '1' GROUP BY r1.information_id) AS rating, (SELECT COUNT(*) AS total FROM " . DB_PREFIX . "review r2 WHERE r2.information_id = i.information_id AND r2.status = '1' GROUP BY r2.information_id) AS reviews, (SELECT u.username FROM " . DB_PREFIX . "user u WHERE u.user_id = i2u.user_id) AS author, i.sort_order FROM " . DB_PREFIX . "information i LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) LEFT JOIN " . DB_PREFIX . "information_to_store i2s ON (i.information_id = i2s.information_id) LEFT JOIN " . DB_PREFIX . "manufacturer m ON (i.manufacturer_id = m.manufacturer_id) LEFT JOIN " . DB_PREFIX . "information_to_user i2u ON (i.information_id = i2u.information_id) WHERE i.information_id = '" . (int)$information_id . "' AND id.language_id = '" . (int)$this->config->get('config_language_id') . "' AND i.status = '1' AND i.date_available <= NOW() AND i.date_end >= NOW() AND i2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

		if ($query->num_rows) {
			return array(
				'information_id'    => $query->row['information_id'],
				'title'             => $query->row['title'],
				'header'            => $query->row['header'],
				'short_description' => $query->row['short_description'],
				'description'       => $query->row['description'],
				'meta_title'        => $query->row['meta_title'],
				'meta_description'  => $query->row['meta_description'],
				'meta_keyword'      => $query->row['meta_keyword'],
				'tag'               => $query->row['tag'],
				'image'             => $query->row['image'],
				'bottom'            => $query->row['bottom'],
				'manufacturer_id'   => $query->row['manufacturer_id'],
				'manufacturer'      => $query->row['manufacturer'],
				'rating'            => round($query->row['rating']),
				'reviews'           => $query->row['reviews'] ? $query->row['reviews'] : 0,
				'user_id'           => $query->row['user_id'],
				'author'            => $query->row['author'],
				'sort_order'        => $query->row['sort_order'],
				'status'            => $query->row['status'],
				'date_available'    => $query->row['date_available'],
				'date_end'          => $query->row['date_end'],
				'date_added'        => $query->row['date_added'],
				'date_modified'     => $query->row['date_modified'],
				'viewed'            => $query->row['viewed']
			);
		} else {
			return false;
		}
	$2]]>
        </add>
      </operation>
      <operation error="skip">
        <search regex="true"><![CDATA[~(getInformations).*(\})~isU]]></search>
        <add><![CDATA[$1($data = array()) {
		$sql = "SELECT i.information_id, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.information_id = i.information_id AND r1.status = '1' GROUP BY r1.information_id) AS rating";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " FROM " . DB_PREFIX . "category_path cp LEFT JOIN " . DB_PREFIX . "information_to_category i2c ON (cp.category_id = i2c.category_id)";
			} else {
				$sql .= " FROM " . DB_PREFIX . "information_to_category i2c";
			}

			if (!empty($data['filter_filter'])) {
				$sql .= " LEFT JOIN " . DB_PREFIX . "information_filter if ON (i2c.information_id = if.information_id) LEFT JOIN " . DB_PREFIX . "information i ON (if.information_id = i.information_id)";
			} else {
				$sql .= " LEFT JOIN " . DB_PREFIX . "information i ON (i2c.information_id = i.information_id)";
			}
		} else {
			$sql .= " FROM " . DB_PREFIX . "information i";
		}

		$sql .= " LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) LEFT JOIN " . DB_PREFIX . "information_to_store i2s ON (i.information_id = i2s.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "' AND i.status = '1' AND i.date_available <= NOW() AND i.date_end >= NOW() AND i2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " AND cp.path_id = '" . (int)$data['filter_category_id'] . "'";
			} else {
				$sql .= " AND i2c.category_id = '" . (int)$data['filter_category_id'] . "'";
			}

			if (!empty($data['filter_filter'])) {
				$implode = array();

				$filters = explode(',', $data['filter_filter']);

				foreach ($filters as $filter_id) {
					$implode[] = (int)$filter_id;
				}

				$sql .= " AND if.filter_id IN (" . implode(',', $implode) . ")";
			}
		}

		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql .= " AND (";

			if (!empty($data['filter_name'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_name'])));

				foreach ($words as $word) {
					$implode[] = "id.title LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql .= " " . implode(" AND ", $implode) . "";
				}

				if (!empty($data['filter_description'])) {
					$sql .= " OR id.description LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
				}
			}

			if (!empty($data['filter_name']) && !empty($data['filter_tag'])) {
				$sql .= " OR ";
			}

			if (!empty($data['filter_tag'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_tag'])));

				foreach ($words as $word) {
					$implode[] = "id.tag LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql .= " " . implode(" AND ", $implode) . "";
				}
			}

			$sql .= ")";
		}

		if (!empty($data['filter_manufacturer_id'])) {
			$sql .= " AND i.manufacturer_id = '" . (int)$data['filter_manufacturer_id'] . "'";
		}

		$sql .= " GROUP BY i.information_id";

		$sort_data = array(
			'id.title',
			'rating',
			'i.viewed',
			'i.sort_order',
			'i.date_added'
		);

		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			if ($data['sort'] == 'id.title') {
				$sql .= " ORDER BY LCASE(" . $data['sort'] . ")";
			} else {
				$sql .= " ORDER BY " . $data['sort'];
			}
		} else {
			$sql .= " ORDER BY i.sort_order";
		}

		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql .= " DESC, LCASE(id.title) DESC";
		} else {
			$sql .= " ASC, LCASE(id.title) ASC";
		}

		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}

		$information_data = array();

		$query = $this->db->query($sql);

		foreach ($query->rows as $result) {
			$information_data[$result['information_id']] = $this->getInformation($result['information_id']);
		}

		return $information_data;
	$2]]>
        </add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
	public function getInformationLayoutId($information_id) {
        ]]></search>
        <add position="before"><![CDATA[   
	public function getTotalInformations($data = array()) {
		$sql = "SELECT COUNT(DISTINCT i.information_id) AS total";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " FROM " . DB_PREFIX . "category_path cp LEFT JOIN " . DB_PREFIX . "information_to_category i2c ON (cp.category_id = i2c.category_id)";
			} else {
				$sql .= " FROM " . DB_PREFIX . "information_to_category i2c";
			}

			if (!empty($data['filter_filter'])) {
				$sql .= " LEFT JOIN " . DB_PREFIX . "information_filter if ON (i2c.information_id = if.information_id) LEFT JOIN " . DB_PREFIX . "information i ON (if.information_id = i.information_id)";
			} else {
				$sql .= " LEFT JOIN " . DB_PREFIX . "information i ON (i2c.information_id = i.information_id)";
			}
		} else {
			$sql .= " FROM " . DB_PREFIX . "information i";
		}

		$sql .= " LEFT JOIN " . DB_PREFIX . "information_description id ON (i.information_id = id.information_id) LEFT JOIN " . DB_PREFIX . "information_to_store i2s ON (i.information_id = i2s.information_id) WHERE id.language_id = '" . (int)$this->config->get('config_language_id') . "' AND i.status = '1' AND i.date_available <= NOW() AND i.date_end >= NOW() AND i2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql .= " AND cp.path_id = '" . (int)$data['filter_category_id'] . "'";
			} else {
				$sql .= " AND i2c.category_id = '" . (int)$data['filter_category_id'] . "'";
			}

			if (!empty($data['filter_filter'])) {
				$implode = array();

				$filters = explode(',', $data['filter_filter']);

				foreach ($filters as $filter_id) {
					$implode[] = (int)$filter_id;
				}

				$sql .= " AND if.filter_id IN (" . implode(',', $implode) . ")";
			}
		}

		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql .= " AND (";

			if (!empty($data['filter_name'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_name'])));

				foreach ($words as $word) {
					$implode[] = "id.title LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql .= " " . implode(" AND ", $implode) . "";
				}

				if (!empty($data['filter_description'])) {
					$sql .= " OR id.description LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
				}
			}

			if (!empty($data['filter_name']) && !empty($data['filter_tag'])) {
				$sql .= " OR ";
			}

			if (!empty($data['filter_tag'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_tag'])));

				foreach ($words as $word) {
					$implode[] = "id.tag LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql .= " " . implode(" AND ", $implode) . "";
				}
			}

			$sql .= ")";
		}

		if (!empty($data['filter_manufacturer_id'])) {
			$sql .= " AND i.manufacturer_id = '" . (int)$data['filter_manufacturer_id'] . "'";
		}

		$query = $this->db->query($sql);

		return $query->row['total'];
	}

	public function getInformationAttributes($information_id) {
		$information_attribute_group_data = array();

		$information_attribute_group_query = $this->db->query("SELECT ag.attribute_group_id, agd.name FROM " . DB_PREFIX . "information_attribute ia LEFT JOIN " . DB_PREFIX . "attribute a ON (ia.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_group ag ON (a.attribute_group_id = ag.attribute_group_id) LEFT JOIN " . DB_PREFIX . "attribute_group_description agd ON (ag.attribute_group_id = agd.attribute_group_id) WHERE ia.information_id = '" . (int)$information_id . "' AND agd.language_id = '" . (int)$this->config->get('config_language_id') . "' GROUP BY ag.attribute_group_id ORDER BY ag.sort_order, agd.name");

		foreach ($information_attribute_group_query->rows as $information_attribute_group) {
			$information_attribute_data = array();

			$information_attribute_query = $this->db->query("SELECT a.attribute_id, ad.name, ia.text FROM " . DB_PREFIX . "information_attribute ia LEFT JOIN " . DB_PREFIX . "attribute a ON (ia.attribute_id = a.attribute_id) LEFT JOIN " . DB_PREFIX . "attribute_description ad ON (a.attribute_id = ad.attribute_id) WHERE ia.information_id = '" . (int)$information_id . "' AND a.attribute_group_id = '" . (int)$information_attribute_group['attribute_group_id'] . "' AND ad.language_id = '" . (int)$this->config->get('config_language_id') . "' AND ia.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY a.sort_order, ad.name");

			foreach ($information_attribute_query->rows as $information_attribute) {
				$information_attribute_data[] = array(
					'attribute_id' => $information_attribute['attribute_id'],
					'name'         => $information_attribute['name'],
					'text'         => $information_attribute['text']
				);
			}

			$information_attribute_group_data[] = array(
				'attribute_group_id' => $information_attribute_group['attribute_group_id'],
				'name'               => $information_attribute_group['name'],
				'attribute'          => $information_attribute_data
			);
		}

		return $information_attribute_group_data;
	}

	public function getInformationImages($information_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information_image WHERE information_id = '" . (int)$information_id . "' ORDER BY sort_order ASC");

		return $query->rows;
	}

	public function getInformationRelated($information_id) {
		$information_data = array();

		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information_related ir LEFT JOIN " . DB_PREFIX . "information i ON (ir.related_id = i.information_id) LEFT JOIN " . DB_PREFIX . "information_to_store i2s ON (i.information_id = i2s.information_id) WHERE ir.information_id = '" . (int)$information_id . "' AND ir.route >= '0' AND i.status = '1' AND i.date_available <= NOW() AND i.date_end >= NOW() AND i2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

		foreach ($query->rows as $result) {
			$information_data[$result['related_id']] = $this->getInformation($result['related_id']);
		}

		return $information_data;
	}

	public function getProductRelated($information_id) {
		$this->load->model('catalog/product');

		$product_data = array();

		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information_product_related ipr LEFT JOIN " . DB_PREFIX . "product p ON (ipr.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE ipr.information_id = '" . (int)$information_id . "' AND ipr.route >= '0' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

		foreach ($query->rows as $result) {
			$product_data[$result['product_id']] = $this->model_catalog_product->getProduct($result['product_id']);
		}

		return $product_data;
	}

	public function getMainCategory($information_id) {
		$query = $this->db->query("SELECT category_id FROM " . DB_PREFIX . "information_to_category WHERE information_id = '" . (int)$information_id . "' AND main_category = '1'");

		if ($query->row) {
			return $query->row['category_id'];
		} else {
			return '';
		}
	}

	public function updateViewed($information_id) {
		$this->db->query("UPDATE " . DB_PREFIX . "information SET viewed = (viewed + 1) WHERE information_id = '" . (int)$information_id . "'");
	}
        ]]></add>
      </operation>
  </file>

  <!-- Product -->
  <file path="catalog/controller/product/product.php">
      <operation error="skip">
        <search><![CDATA[
			$data['heading_title'] = $product_info['name'];
        ]]></search>
        <add position="replace"><![CDATA[
			$data['heading_title'] = $product_info['header'] ? $product_info['header'] : $product_info['name'];
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
		if ($product_info) {
        ]]></search>
        <add position="after"><![CDATA[
			if (!isset($this->request->get['path']) && !isset($this->request->get['manufacturer_id']) && !isset($this->request->get['search']) && !isset($this->request->get['tag'])) {
				$main_category = $this->model_catalog_product->getMainCategory($product_id);

				if ($main_category) {
					$this->request->get['path'] = $this->model_catalog_category->getCategoryPath($main_category);

					$path = '';

					$parts = explode('_', (string)$this->request->get['path']);
					(int)array_pop($parts);
      
					foreach ($parts as $path_id) {
						if (!$path) {
							$path = (int)$path_id;
						} else {
							$path .= '_' . (int)$path_id;
						}

						$category_info = $this->model_catalog_category->getCategory($path_id);

						if ($category_info) {
							$data['breadcrumbs'][] = array(
								'text' => $category_info['name'],
								'href' => $this->url->link('product/category', 'path=' . $path)
							);
						}
					}

					// Set the last category breadcrumb
					$category_info = $this->model_catalog_category->getCategory($main_category);

					if ($category_info) {
						$url = '';

						if (isset($this->request->get['sort'])) {
							$url .= '&sort=' . $this->request->get['sort'];
						}

						if (isset($this->request->get['order'])) {
							$url .= '&order=' . $this->request->get['order'];
						}

						if (isset($this->request->get['page'])) {
							$url .= '&page=' . $this->request->get['page'];
						}

						if (isset($this->request->get['limit'])) {
							$url .= '&limit=' . $this->request->get['limit'];
						}

						$data['breadcrumbs'][] = array(
							'text' => $category_info['name'],
							'href' => $this->url->link('product/category', 'path=' . $this->request->get['path'] . $url)
						);
					}
				}
			}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['description'] = html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8');
        ]]></search>
        <add position="after"><![CDATA[
			$data['short_description'] = html_entity_decode($product_info['short_description'], ENT_QUOTES, 'UTF-8');
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
			$data['tags'] = array();
        ]]></search>
        <add position="before"><![CDATA[
			$data['informations'] = array();

			$results = $this->model_catalog_product->getInformationRelated($product_id);

			foreach ($results as $result) {
				if ($result['image']) {
					$image = $this->model_tool_image->resize($result['image'], $this->config->get('information_image_related_width'), $this->config->get('information_image_related_height'));
				} else {
					$image = false;
				}

				if ($this->config->get('information_review_status')) {
					$rating = (int)$result['rating'];
				} else {
					$rating = false;
				}

				$data['informations'][] = array(
					'information_id' => $result['information_id'],
					'thumb'          => $image,
					'title'          => $result['title'],
					'description'    => !empty($result['short_description']) ? trim(html_entity_decode($result['short_description'], ENT_QUOTES, 'UTF-8')) : utf8_substr(trim(strip_tags(html_entity_decode($result['description'], ENT_QUOTES, 'UTF-8'))), 0, $this->config->get('information_description_length')) . '..',
					'user_id'        => $result['user_id'],
					'author'         => $result['author'],
					'date_added'     => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
					'reviews'        => sprintf($this->language->get('text_related_reviews'), $result['reviews']),
					'rating'         => $result['rating'],
					'href'           => $this->url->link('information/information', 'information_id=' . $result['information_id'])
				);
			}

			$data['show_related_author'] = $this->config->get('information_category_author');
			$data['show_related_date'] = $this->config->get('information_category_date');
			$data['show_related_review'] = $this->config->get('information_category_review');
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
				'text'       => nl2br($result['text']),
        ]]></search>
        <add position="after"><![CDATA[
				'reply'      => html_entity_decode($result['reply'], ENT_QUOTES, 'UTF-8'),
        ]]></add>
      </operation>
  </file>

  <file path="catalog/language/en-gb/product/product.php">
      <operation error="skip">
        <search><![CDATA[
// Entry
        ]]></search>
        <add position="before"><![CDATA[
$_['text_related_information'] = 'Related Articles';
$_['text_related_reviews']     = '%s reviews';
$_['text_read']                = 'Read..';
        ]]></add>
      </operation>
  </file>
  
  <file path="catalog/language/ru-ru/product/product.php">
      <operation error="skip">
        <search><![CDATA[
// Entry
        ]]></search>
        <add position="before"><![CDATA[
$_['text_related_information'] = 'Рекомендуемые статьи';
$_['text_related_reviews']     = '%s отзывов';
$_['text_read']                = 'Подробнее..';
        ]]></add>
      </operation>
  </file>
  
  <file path="catalog/model/catalog/product.php">
      <operation error="skip">
        <search><![CDATA[
				'description'      => $query->row['description'],
        ]]></search>
        <add position="before"><![CDATA[
				'header'            => $query->row['header'],
				'short_description' => $query->row['short_description'],
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[pr.product_id = '" . (int)$product_id . "' AND p.status = '1']]></search>
        <add position="replace"><![CDATA[pr.product_id = '" . (int)$product_id . "' AND pr.route >= '0' AND p.status = '1']]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
	public function getProductLayoutId($product_id) {
        ]]></search>
        <add position="before"><![CDATA[
	public function getInformationRelated($product_id) {
		$this->load->model('catalog/information');

		$information_data = array();

		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "information_product_related ipr LEFT JOIN " . DB_PREFIX . "information i ON (ipr.information_id = i.information_id) LEFT JOIN " . DB_PREFIX . "information_to_store i2s ON (i.information_id = i2s.information_id) WHERE ipr.product_id = '" . (int)$product_id . "' AND ipr.route >= '0' AND i.status = '1' AND i.date_available <= NOW() AND i.date_end >= NOW() AND i2s.store_id = '" . (int)$this->config->get('config_store_id') . "'");

		foreach ($query->rows as $result) {
			$information_data[$result['information_id']] = $this->model_catalog_information->getInformation($result['information_id']);
		}

		return $information_data;
	}

	public function getMainCategory($product_id) {
		$query = $this->db->query("SELECT category_id FROM " . DB_PREFIX . "product_to_category WHERE product_id = '" . (int)$product_id . "' AND main_category = '1'");

		if ($query->row) {
			return $query->row['category_id'];
		} else {
			return '';
		}
	}
        ]]></add>
      </operation>
  </file>

  <!-- Review -->
  <file path="catalog/model/catalog/review.php">
      <operation error="skip">
        <search><![CDATA[
	public function getTotalReviewsByProductId($product_id) {
        ]]></search>
        <add position="before"><![CDATA[
	public function addInformationReview($information_id, $data) {
		$this->db->query("INSERT INTO " . DB_PREFIX . "review SET author = '" . $this->db->escape($data['name']) . "', customer_id = '" . (int)$this->customer->getId() . "', information_id = '" . (int)$information_id . "', text = '" . $this->db->escape($data['text']) . "', rating = '" . (int)$data['rating'] . "', date_added = NOW()");

		$review_id = $this->db->getLastId();

		if (in_array('review', (array)$this->config->get('config_mail_alert'))) {
			$this->load->language('mail/review');
			$this->load->model('catalog/information');
			
			$information_info = $this->model_catalog_information->getInformation($information_id);

			$subject = sprintf($this->language->get('text_information_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));

			$message  = $this->language->get('text_waiting') . "\n";
			$message .= sprintf($this->language->get('text_information'), html_entity_decode($information_info['title'], ENT_QUOTES, 'UTF-8')) . "\n";
			$message .= sprintf($this->language->get('text_reviewer'), html_entity_decode($data['name'], ENT_QUOTES, 'UTF-8')) . "\n";
			$message .= sprintf($this->language->get('text_rating'), $data['rating']) . "\n";
			$message .= $this->language->get('text_review') . "\n";
			$message .= html_entity_decode($data['text'], ENT_QUOTES, 'UTF-8') . "\n\n";

			$mail = new Mail($this->config->get('config_mail_engine'));
			$mail->parameter = $this->config->get('config_mail_parameter');
			$mail->smtp_hostname = $this->config->get('config_mail_smtp_hostname');
			$mail->smtp_username = $this->config->get('config_mail_smtp_username');
			$mail->smtp_password = html_entity_decode($this->config->get('config_mail_smtp_password'), ENT_QUOTES, 'UTF-8');
			$mail->smtp_port = $this->config->get('config_mail_smtp_port');
			$mail->smtp_timeout = $this->config->get('config_mail_smtp_timeout');

			$mail->setTo($this->config->get('config_email'));
			$mail->setFrom($this->config->get('config_email'));
			$mail->setSender(html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'));
			$mail->setSubject($subject);
			$mail->setText($message);
			$mail->send();

			// Send to additional alert emails
			$emails = explode(',', $this->config->get('config_mail_alert_email'));

			foreach ($emails as $email) {
				if ($email && filter_var($email, FILTER_VALIDATE_EMAIL)) {
					$mail->setTo($email);
					$mail->send();
				}
			}
		}
	}

	public function getReviewsByInformationId($information_id, $start = 0, $limit = 20) {
		if ($start < 0) {
			$start = 0;
		}

		if ($limit < 1) {
			$limit = 20;
		}

		$query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "review` WHERE `information_id` = '" . (int)$information_id . "' AND `status` = '1' ORDER BY `date_added` DESC LIMIT " . (int)$start . "," . (int)$limit);

		return $query->rows;
	}

	public function getTotalReviewsByInformationId($information_id) {
		$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "review` WHERE `information_id` = '" . (int)$information_id . "' AND `status` = '1'");

		return $query->row['total'];
	}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[$query = $this->db->query("SELECT r.review_id, r.author, r.rating, r.text, p.product_id, pd.name, p.price, p.image, r.date_added FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product p ON (r.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND p.date_available <= NOW() AND p.status = '1' AND r.status = '1' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY r.date_added DESC LIMIT " . (int)$start . "," . (int)$limit);]]></search>
        <add position="replace"><![CDATA[$query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "review` WHERE `product_id` = '" . (int)$product_id . "' AND `status` = '1' ORDER BY `date_added` DESC LIMIT " . (int)$start . "," . (int)$limit);]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "review r LEFT JOIN " . DB_PREFIX . "product p ON (r.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) WHERE p.product_id = '" . (int)$product_id . "' AND p.date_available <= NOW() AND p.status = '1' AND r.status = '1' AND pd.language_id = '" . (int)$this->config->get('config_language_id') . "'");]]></search>
        <add position="replace"><![CDATA[$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "review` WHERE `product_id` = '" . (int)$product_id . "' AND `status` = '1'");]]></add>
      </operation>
  </file>

  <!-- Mail Review -->
  <file path="catalog/language/en-gb/mail/review.php">
      <operation error="skip">
        <search><![CDATA[
// Text
        ]]></search>
        <add position="after"><![CDATA[
$_['text_information_subject'] = '%s - Review Article';
$_['text_information']         = 'Article: %s';
        ]]></add>
      </operation>
  </file>
  
  <file path="catalog/language/ru-ru/mail/review.php">
      <operation error="skip">
        <search><![CDATA[
// Text
        ]]></search>
        <add position="after"><![CDATA[
$_['text_information_subject'] = '%s - отзыв о статье';
$_['text_information']         = 'Статья: %s';
        ]]></add>
      </operation>
  </file>

  <!-- Common Menu -->
  <file path="catalog/controller/common/menu.php">
      <operation error="skip">
        <search><![CDATA[
		$this->load->model('catalog/product');
        ]]></search>
        <add position="after"><![CDATA[
		$this->load->model('catalog/information');
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : '')]]></search>
        <add position="replace"><![CDATA[($category['information'] ? ($category['information'] && $this->config->get('information_count') ? ' (' . $this->model_catalog_information->getTotalInformations($filter_data) . ')' : '') : ($this->config->get('config_product_count') ? ' (' . $this->model_catalog_product->getTotalProducts($filter_data) . ')' : ''))]]></add>
      </operation>
  </file>

  <!-- Information Sitemap -->
  <file path="catalog/controller/information/sitemap.php">
      <operation error="skip">
        <search><![CDATA[
		foreach ($categories_1 as $category_1) {
        ]]></search>
        <add position="after"><![CDATA[
			if ($category_1['information']) {
				$level_2_data = array();

				$categories_2 = $this->model_catalog_category->getCategories($category_1['category_id']);

				foreach ($categories_2 as $category_2) {
					$level_3_data = array();

					$categories_3 = $this->model_catalog_category->getCategories($category_2['category_id']);

					foreach ($categories_3 as $category_3) {
					$level_3_data[] = array(
							'name' => $category_3['name'],
							'href' => $this->url->link('product/category', 'path=' . $category_1['category_id'] . '_' . $category_2['category_id'] . '_' . $category_3['category_id'])
						);
					}

					$level_2_data[] = array(
						'name'     => $category_2['name'],
						'children' => $level_3_data,
						'href'     => $this->url->link('product/category', 'path=' . $category_1['category_id'] . '_' . $category_2['category_id'])
					);
				}

				$data['information_categories'][] = array(
					'name'     => $category_1['name'],
					'children' => $level_2_data,
					'href'     => $this->url->link('product/category', 'path=' . $category_1['category_id'])
				);

				continue;
			}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
		foreach ($this->model_catalog_information->getInformations() as $result) {
        ]]></search>
        <add position="after"><![CDATA[
			if ($this->model_catalog_information->getMainCategory($result['information_id'])) {
				continue;
			}
        ]]></add>
      </operation>
  </file>

  <!-- Product Search -->
  <file path="catalog/controller/product/search.php">
      <operation error="skip">
        <search><![CDATA[
		foreach ($categories_1 as $category_1) {
        ]]></search>
        <add position="after"><![CDATA[
			if ($category_1['information']) {
				continue;
			}
        ]]></add>
      </operation>
      <operation error="skip">
        <search><![CDATA[
					'products'      => $product_total,
        ]]></search>
        <add position="after"><![CDATA[
					'informations'  => 0,
        ]]></add>
      </operation>
  </file>

  <!-- Account Search -->
  <file path="catalog/model/account/search.php">
  	  <operation error="skip">
        <search><![CDATA[`products` = '" . (int)$data['products'] . "',]]></search>
        <add position="replace"><![CDATA[`products` = '" . (int)$data['products'] . "', `informations` = '" . (int)$data['informations'] . "',]]></add>
      </operation>
  </file>

  <!-- Module Category -->
  <file path="catalog/controller/extension/module/category.php">
      <operation error="skip">
        <search><![CDATA[
		foreach ($categories as $category) {
        ]]></search>
        <add position="after"><![CDATA[
			if ($category['information']) {
				continue;
			}
        ]]></add>
      </operation>
  </file>

  <!-- Seo Url -->
  <file path="catalog/controller/startup/seo_url.php">
      <operation error="skip">
        <search><![CDATA[
				} elseif (isset($this->request->get['path'])) {
        ]]></search>
        <add position="replace"><![CDATA[
				} elseif (isset($this->request->get['path']) && !isset($this->request->get['information_id'])) {
        ]]></add>
      </operation>
  </file>
</modification>